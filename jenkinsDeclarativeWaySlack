pipeline {
    agent any
    tools {
        maven 'Maven 3.8.4'
    }
    
    options {
      timestamps()
      buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
    }

    
    stages {
    
        stage('GithubIntegration') {
            steps {
                git branch: 'development', credentialsId: 'b4d83e06-a9fc-496d-8650-1700bd65739b', url: 'https://github.com/Learning-Devops-April/maven-web-application.git'
            }
        }
        
        stage('mavenBuild') {
            steps {
                sh "mvn clean package"
            }
        }
        
        stage('SonarReport') {
            steps {
                sh "mvn sonar:sonar"
            }
        }
        
        stage('NexusDeploy') {
            steps {
                sh "mvn clean deploy"
            }
        }
        
        stage('TomcatDeploy') {
            steps {
                sshagent(['ed591055-2715-49ad-8f76-b5814347c97b']) {
                    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.7.70:/opt/apache-tomcat-9.0.63/webapps"
                }
            }
        } //stage
    } //stages
  post {
      aborted {
        // One or more steps need to be included within each condition's block.
        notifyBuild('ABORTED')
      }
      success {
        // One or more steps need to be included within each condition's block.
        notifyBuild('SUCCESSFUL')
      }
      failure {
        // One or more steps need to be included within each condition's block.
        notifyBuild('FAILURE')
      }
}

} //pipeline

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else if (buildStatus == 'ABORTED') {
    color = 'DARK TURQUOISE'
    colorCode = '#00CED1'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
